/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LiveInfoInterface.java
 *
 * Created on May 1, 2012, 12:41:14 PM
 */

package ibms;

/**
 *
 * @author Ben
 */
public class LiveInfoInterface extends javax.swing.JFrame {

    /** Creates new form LiveInfoInterface */
    public LiveInfoInterface() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        busStopDropDown = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        routeDropDown = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        timeField = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        areaTextLabel = new javax.swing.JLabel();
        areaDropDown = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18));
        jLabel1.setText("Live Information");

        jLabel2.setText("Bus Stop:");

        busStopDropDown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        busStopDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busStopDropDownActionPerformed(evt);
            }
        });

        jLabel3.setText("Select your route:");

        routeDropDown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));

        outputArea.setColumns(20);
        outputArea.setRows(5);
        jScrollPane1.setViewportView(outputArea);

        jLabel4.setText("Time (HHMM):");

        timeField.setText("0000");

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        areaTextLabel.setText("Area:");

        areaDropDown.setModel(new javax.swing.DefaultComboBoxModel(BusStopInfo.getAreaNames()));
        areaDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                areaDropDownActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(layout.createSequentialGroup()
                        .add(timeField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 116, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(submitButton))
                    .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jLabel3)
                        .add(25, 25, 25)
                        .add(routeDropDown, 0, 96, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2)
                            .add(areaTextLabel))
                        .add(77, 77, 77)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(areaDropDown, 0, 96, Short.MAX_VALUE)
                            .add(busStopDropDown, 0, 96, Short.MAX_VALUE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 14, Short.MAX_VALUE)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(areaTextLabel)
                            .add(areaDropDown, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2)
                            .add(busStopDropDown, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(routeDropDown, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(timeField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(submitButton))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean checkInt (String check) {
        try {
            Integer.parseInt(check);
            return true;
        } catch (NumberFormatException nfe) {
            return false;
        }
    }

    String route = "";
    String busStopSelection = "";
    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        
        //the bus stop we are going to use
        busStopSelection = (String) busStopDropDown.getSelectedItem();

        //the route along which you are going to travel
        route = (String) routeDropDown.getSelectedItem();

        //the time set by the user
        String time = timeField.getText();
        int currentTime = Integer.parseInt(time);
        double probabilityOfBreakdown = 0;

        if (checkInt(time) && time.length() == 4) {
            outputArea.setText("Given time for journey: " + time + "\n");

            if (currentTime >= 0000 && currentTime <= 2359) {
                probabilityOfBreakdown = Math.random();

                if (probabilityOfBreakdown > 0.5) {
                    outputArea.append(cancellation(probabilityOfBreakdown, currentTime));
                }
            }

        } else {
                System.out.println("Invalid time, please type in a correct time");
        }

    }//GEN-LAST:event_submitButtonActionPerformed

    private void busStopDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busStopDropDownActionPerformed
        // TODO add your handling code here:
        busStopUpdate((String) busStopDropDown.getSelectedItem(), routeDropDown);
    }//GEN-LAST:event_busStopDropDownActionPerformed

    private void areaDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_areaDropDownActionPerformed
        // TODO add your handling code here:
        areaUpdate((String) areaDropDown.getSelectedItem(), busStopDropDown);
    }//GEN-LAST:event_areaDropDownActionPerformed


    private void busStopUpdate(String busStop, javax.swing.JComboBox dropdown) {

        int [] routesAtBusStop = BusStopInfo.getRoutes();

        dropdown.removeAllItems();
        for (int i = 0; i < routesAtBusStop.length; i ++) {
            dropdown.addItem(routesAtBusStop[i]);
        }
    }

    private void areaUpdate(String area, javax.swing.JComboBox dropdown) {

        int areaNum = BusStopInfo.findAreaByName(area);
        int [] busStopsInArea = BusStopInfo.getBusStopsInArea(areaNum);

        dropdown.removeAllItems();
        for(int busStopId : busStopsInArea) {
            dropdown.addItem(BusStopInfo.getFullName(busStopId));
        }

    }

    private String cancellation(double probability, int time) {
        String message = "";
        double delayTime = 100 * Math.random();

        //if there is no delay
        if (probability <= 0.5) {
            //give the next available bus from the timetable at the given bus stop

        } else {
            //there has been a delay
            //pick a random statement to print out regarding a delay
            double delayNum = Math.random() * 10;

            System.out.println("Delay choice: " + delayNum);

            if (delayNum < 1) {
                message += "There has been an accident on route " + route + " ";
                message += "at " + busStopSelection + ", ";
                message += "which has lead to a delay of " + (int)delayTime + ".";
            } else if (delayNum < 2 && delayNum > 1) {
                
            } else if (delayNum < 3 && delayNum > 2) {

            } else if (delayNum < 4 && delayNum > 3) {

            }else if (delayNum < 5 && delayNum > 4) {

            }else if (delayNum < 6 && delayNum > 5) {

            }else if (delayNum < 7 && delayNum > 6) {

            }else if (delayNum < 8 && delayNum > 7) {

            }else if (delayNum < 9 && delayNum > 8) {

            }else if (delayNum < 10 && delayNum > 9) {

            }


        }

        return message;
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LiveInfoInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox areaDropDown;
    private javax.swing.JLabel areaTextLabel;
    private javax.swing.JComboBox busStopDropDown;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea outputArea;
    private javax.swing.JComboBox routeDropDown;
    private javax.swing.JButton submitButton;
    private javax.swing.JTextField timeField;
    // End of variables declaration//GEN-END:variables

}
