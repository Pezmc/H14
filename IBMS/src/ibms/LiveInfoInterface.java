/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LiveInfoInterface.java
 *
 * Created on May 1, 2012, 12:41:14 PM
 */

package ibms;

import java.awt.Component;
import javax.swing.JOptionPane;
import static java.util.Calendar.*;

/**
 *
 * @author Ben
 */
public class LiveInfoInterface extends javax.swing.JFrame {
    /** Creates new form LiveInfoInterface */
    public LiveInfoInterface() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        busStopDropDown = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        routeDropDown = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        timeField = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18));
        jLabel1.setText("Live Information");

        jLabel2.setText("Bus Stop:");

        busStopDropDown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));

        jLabel3.setText("Select your route:");

        routeDropDown.setModel(new javax.swing.DefaultComboBoxModel(routeNames));
        routeDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                routeDropDownActionPerformed(evt);
            }
        });

        outputArea.setColumns(20);
        outputArea.setRows(5);
        jScrollPane1.setViewportView(outputArea);

        jLabel4.setText("Time (HHMM):");

        timeField.setText("0000");

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .add(79, 79, 79))
                    .add(layout.createSequentialGroup()
                        .add(timeField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 116, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(submitButton))
                    .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(jLabel3)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(routeDropDown, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(jLabel2)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(busStopDropDown, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 163, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(5, 5, 5))
                    .add(jLabel5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(routeDropDown, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2)
                            .add(busStopDropDown, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 41, Short.MAX_VALUE)
                        .add(jLabel5)
                        .add(18, 18, 18)
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(timeField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(submitButton))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String route = "";
    String busStopSelection = "";
    int routeNumber = 0;
    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        try {
            
            //the bus stop we are going to use
            busStopSelection = (String) busStopDropDown.getSelectedItem();
            //the area
            //the route along which you are going to travel
            route = (String)routeDropDown.getSelectedItem();
            routeNumber = BusStopInfo.findRoute(route);

            //System.out.println("Route: " + routeNumber);
            //the time set by the user
            String time = timeField.getText();
            int [] times = new int [4];
            int currentTime = Integer.parseInt(time);
            double probabilityOfBreakdown = 0;

            //check they have made a descision
            if(busStopSelection.equals("-")||busStopSelection.equals(""))
                displayMessage("You need to choose a bus stop!", "Bus Stop Error");

            //check they have made a descision
            if(routeNumber == 0)
                displayMessage("You need to choose a route!", "Route Error");

            //check again
            if (time.length() == 4) {
                if (currentTime >= 0000 && currentTime <= 2359) {
                    probabilityOfBreakdown = Math.random();
                    times[0] = Integer.parseInt(Character.toString(time.charAt(0)));
                    times[1] = Integer.parseInt(Character.toString(time.charAt(1)));
                    times[2] = Integer.parseInt(Character.toString(time.charAt(2)));
                    times[3] = Integer.parseInt(Character.toString(time.charAt(3)));

                    outputArea.setText("Given time for journey: " + times[0] + times[1] + ":" + times[2] + times[3] + "\n");
                    if (probabilityOfBreakdown > 0.5) {
                        outputArea.append(LiveInfo.cancellation(probabilityOfBreakdown, times, routeNumber, busStopSelection));
                    } else {
                        outputArea.append(LiveInfo.noCancellation(probabilityOfBreakdown, times, routeNumber, busStopSelection));
                    }
                }
            } else {
                System.out.println("Invalid time, please type in a correct time");
            }
        } catch (ibms.InvalidQueryException e) {
            displayError("There was an error with your query: " + e.getMessage(), "Query Error");
            System.out.printf("Caught error %s:\n", e.getMessage());
            System.out.printf("%s %s %s\n\n", e, e.getCause(), e.getClass());

        } catch (Exception e) {
            displayWarning("There was an unexpected error: " + e.getMessage(), "Error");
            System.out.printf("Caught error %s:\n", e.getMessage());
            System.out.printf("%s", e);
      }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void routeDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_routeDropDownActionPerformed
        // TODO add your handling code here:
        routeUpdate((String) routeDropDown.getSelectedItem(), busStopDropDown);
    }//GEN-LAST:event_routeDropDownActionPerformed

    /**
     * Custom Error Handling
     * @param message
     * @param title
     * @param type
     */
    private void displayDialog(String message, String title, int type) {
      JOptionPane.showMessageDialog(null, message, title, type);
    }
    
    private void displayError(String message, String title) {
      this.displayDialog(message, title, JOptionPane.ERROR_MESSAGE);
    }
    
    private void displayWarning(String message, String title) {
      this.displayDialog(message, title, JOptionPane.WARNING_MESSAGE);
    }
    
    private void displayMessage(String message, String title) {
      this.displayDialog(message, title, JOptionPane.INFORMATION_MESSAGE);
    }
    /**
     * areaUpdate
     * @param area
     * @param dropdown
     */
    private void routeUpdate(String route, javax.swing.JComboBox dropdown) {

        int routeNum = BusStopInfo.findRoute(route);
        int [] busStopsOnRoute = BusStopInfo.getBusStops(routeNum);

        dropdown.removeAllItems();
        for(int busStopId : busStopsOnRoute) {
            dropdown.addItem(BusStopInfo.getStopName(busStopId));
        }
    }

    /**
    * @param args the command line arguments
    */
    public static String[] routeNames;
    public static void main(String args[]) {
        try {
            database.openBusDatabase();

            int[] routes = BusStopInfo.getRoutes();
            routeNames = new String[routes.length];
            for (int i = 0; i < routes.length; i ++) {
                routeNames[i] = BusStopInfo.getRouteName(routes[i]);
            }

            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new LiveInfoInterface().setVisible(true);
                }
            });
        } catch (ibms.InvalidQueryException e) {
        JOptionPane.showMessageDialog(null, e.getMessage(), "Query Error", JOptionPane.ERROR_MESSAGE);
        System.out.printf("Caught error %s", e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox busStopDropDown;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea outputArea;
    private javax.swing.JComboBox routeDropDown;
    private javax.swing.JButton submitButton;
    private javax.swing.JTextField timeField;
    // End of variables declaration//GEN-END:variables

}
